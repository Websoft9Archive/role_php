- name: Import Remi's RPM PHP repository on {{ansible_distribution}}
  shell: yum install -y https://rpms.remirepo.net/enterprise/remi-release-{{ansible_distribution_major_version}}.rpm
  when: ansible_distribution == "CentOS"
  
- name: Import Remi's RPM PHP repository on AmazonLinux2
  yum:
    name: https://rpms.remirepo.net/enterprise/remi-release-7.rpm
  when: ansible_distribution == "Amazon"  

- name: Disable all version php repo 
  shell: yum-config-manager --disable remi-php*
    
- name: Remove php and php extends 
  yum: 
    name: [php,php-*]
    state: absent
    update_cache: yes
  when: php_cli_exists.stat.exists and php_ver.stdout is defined 

- name: String convert, e.g 7.2 to 72
  set_fact:
    php_version_regex: "{{ php_version | regex_replace('^(?P<before>.+).(?P<after>\\d+)$', '\\g<before>\\g<after>')}}"

- name: Enable php version for {{php_version}}
  shell: yum-config-manager --enable remi-php{{php_version_regex}}

- block:
  - name: Install PHP core for {{ansible_distribution}}
    yum: 
      name: php
      state: latest
      update_cache: yes

  - name: Install php_modules_common for {{ansible_distribution}}, print when all module installation errors but installation go on
    yum: 
      name: "{{ item }}"
      state: latest
      update_cache: yes
    register: php_install_result
    failed_when: False
    loop: "{{ php_modules_common }}"
    
  - debug: 
      msg: "{{ php_install_result | json_query('results[*].results[*]') }}"

  - name: Install php_extra_modules_centos for {{ansible_distribution}}
    yum: 
      name: "{{ item }}"
      state: latest 
      update_cache: yes
    loop: "{{ php_extra_modules_centos }}"

- name: Create a PHP  symbolic link
  file:
    src: '{{item.src}}'
    dest: '{{item.dest}}'
    state: link
  with_items:
    - {src: '/etc/php.ini',dest: /data/config/php/php.ini}  
    - {src: '/etc/php-fpm.d/www.conf',dest: /data/config/php/php-fpm.conf} 
    - {src: '/var/log/php-fpm',dest: '/data/logs/php-fpm'}
